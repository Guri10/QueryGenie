name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test imports
        run: |
          PYTHONPATH=src python -c "import src.api; print('API module imports successfully')"
          PYTHONPATH=src python -c "import src.faiss_manager; print('FAISS manager imports successfully')"
          PYTHONPATH=src python -c "import src.rag_pipeline; print('RAG pipeline imports successfully')"
          PYTHONPATH=src python -c "import src.preprocessing; print('Preprocessing imports successfully')"

      - name: Test basic functionality
        run: |
          PYTHONPATH=src python -c "
          from src.faiss_manager import FAISSManager
          from src.rag_pipeline import RAGPipeline
          print('✅ All core modules can be imported')
          "

      - name: Check Docker build
        run: |
          docker build -t querygenie-test .
          echo "✅ Docker build successful"

      - name: Test Docker container
        run: |
          # Start container in background
          echo "Starting Docker container..."
          docker run --rm -d --name querygenie-test -p 8001:8000 querygenie-test

          # Wait a moment for container to start
          sleep 5

          # Check if container is still running
          if docker ps | grep -q querygenie-test; then
            echo "✅ Docker container started successfully"
            
            # Wait for app to start
            sleep 20
            
            # Check if container is still running
            if docker ps | grep -q querygenie-test; then
              echo "✅ Container is still running"
              
              # Test basic connectivity
              if curl -s http://localhost:8001/ > /dev/null 2>&1; then
                echo "✅ Container is responding to requests"
              else
                echo "⚠️ Container not responding (checking logs)"
                echo "Container logs:"
                docker logs querygenie-test --tail 30
              fi
              
              # Test simple test endpoint
              if curl -s http://localhost:8001/test > /dev/null 2>&1; then
                echo "✅ Test endpoint is accessible"
              else
                echo "⚠️ Test endpoint not accessible"
              fi
              
              # Test API info endpoint
              if curl -s http://localhost:8001/api > /dev/null 2>&1; then
                echo "✅ API endpoint is accessible"
              else
                echo "⚠️ API endpoint not accessible"
              fi
              
              # Stop container
              docker stop querygenie-test
              echo "✅ Docker container test completed"
            else
              echo "❌ Container stopped unexpectedly"
              echo "Container logs:"
              docker logs querygenie-test
              exit 1
            fi
          else
            echo "❌ Docker container failed to start or crashed immediately"
            echo "Container logs:"
            docker logs querygenie-test
            exit 1
          fi
